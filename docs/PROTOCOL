DRAFT VERSION 1.0
-----------------

This is a rough draft of the ASCII text based serial (LoRa) protocol
we will use.

Sequence numbers might be deleted or replaced at some point, so probably
best to use ampduino.h and protocol.c ;)

- Commands are ALWAYS to be ACKnowledged by seq #


*****************
* Packet Format *
*****************
[SRC]:[DEST].[SEQNO][FLAGS] [NOUN] [VERB] [VALUES]

[SRC]	Source Address 		[00-FF]

[DEST]	Destination Address 	[00-FF] or ** for broadcast

[SEQNO]	Sequence # of this packet [0000-FFFF]
	This is unique per conversation (SRC:DEST pair) but
	broadcast ** is treated specially in that the sent seqno
	in the reply will be the one from the original (broadcast) request.

[FLAGS]	Flags for this seq. number
	*	- ACKnowledge request
	-	- NOT ACKnowledge request (causes TX_HALT usually)

[NOUN]	Selects a function class
	*	- Addresses ALL classes
	AMP	- Address a amplifier
	ATU	- Address a tuner
	KEY	- Session Key Management
	ROT	- Address an antenna rotor
	SW	- Address an antenna switch

[VERB] 	Common
	BOOT	- Restart and boot to default initial state
	POWER	- Control device power/bypass state
		ON / BYPASS
	PTT	- Push To Talk button
	PTT_END	- End Push To Talk
	STATUS	- Request device status
	TX_OK	- Is it OK to transmit?
		  This one causes devices to respond as well with their
		  status message - so that ubitx can confirm proper setup
	TX_HALT	- STOP ALL TRANSMISSION IMMEDIATELY!

[VERB]	ATU
	TUNE	- Tune the antenna

[VERB]	ROT
	READ	- Get position of rotor, if known
	ROTATE
		[degrees]	Rotate X degrees

[VERB]	SW
	IN	- Set Input [00-FF]
	OUT	- Set Output [00-FF]
	READ	- Read input/output selections

--------------------
Example Conversation
--------------------
> Shows a summary of the message, the next line shows the message text in ASCII

... ubitx has powered on and booted up ...
> ubitx to ALL: Tell all devices we have booted up and they should restart too
00:**.0000 * BOOT OK

... Some time passes as devices will boot loop until see ubitx ...
--- AMP/ATU-100 has come up ---

> remote-amp1 to ALL: I have booted OK
0F:**.0000 * BOOT OK

> ubitx to remote-amp1: ACKnowledge your BOOT OK message
00:0F.0000*

> ubitx to remote-amp1: Set time to our initial TV
00:0F.0001 * TIME 1642829366

> remote-amp1 to ubitx: ACKnowledge initial TV
0F:00.0001*

> remote-amp1 to ubitx: Start session KEYing...
0F:00.0002 * KEY C097AADC9305 33675319

> ubitx to remote-amp1: Start session KEYing...
00:0F.0002*

> remote-amp1 to ubitx: Agree on session key
0F:00.0003 KEY A0637394 CC71F340 0FCA9137 2265A012

> ubitx to remote-amp1: Agree on session key, going encrypted
00:0F.0003*

... Let's make sure we have the right right antenna selected ...
> ubitx to remote-amp1: 
00:0F.0004 SW IN 1

> ubitx to remote-amp1:
00:0F.0005 SW OUT 1

> remote-amp1 to ubitx: ACKnowledge in-antenna change
0F:00.0004*

> remote-amp1 to ubitx: ACKnowledge out-antenna change
0F:00.0005*

... Some time passes and we start a session ---
> ubitx to ALL: Is it safe to transmit?
00:**.0006 * TX_OK

> remote-amp1 to ubitx: My AMP status is...
0F:00:0007 AMP STATUS mode=bypass

> ubitx to remote-amp1: ACKnowlege your AMP status
00:0F:0007*

> remote-amp1 to ubitx: My ANT status is...
0F:00:0008 SW STATUS mode=on,input=1,output=1

> ubitx to remote-amp1: ACKnowledge your ANT status
00:0F:0008*

> remote-amp1 to ubitx: My ATU status is...
0F:00:0009 ATU STATUS mode=on,pwr=0.0W,SWR=0,L=0.03uh,C=0uf

> ubitx to remote-amp1: ACKnowledge your ATU status
00:0F:0009*

> remote-amp1 to ubitx: Yes, it's safe to TX
0F:00.0006*

> ubitx to remote-amp1: I'm sending TUNING tones, tune up the antenna
00:0F.000A ATU TUNE

> remote-amp1 to ubitx: ACKnowledge tuning request
0F:00.000A*

> ubitx to ALL: PTT on
00:**.000B * PTT

> remote-amp1 to ubitx: ACKnowledge PTT
0F:00.000B*

> remote-amp1 to ubitx: OK, i'm tuning and will update you soon
0F:00.000C ATU STATUS mode=tuning

> ubitx to remote-amp1: ACKnowledge tuning status
00:0F.000C*

... Some seconds pass ...


> remote-amp1 to ALL: My ATU status is:
0F:**.000D ATU STATUS mode=on,pwr=10.0W,SWR=1.1,L=0.23uh,C=1.3uf

> ubitx to remote-amp1: ACKnowledge ATU status
00:0F.000D*

> remote-amp1 to ALL: TX_HALT - Leave transmit mode
0F:**.000E TX_HALT

> ubitx to remote-amp1: ACKnowledge TX_HALT
00:0F.000E*

... We are now set to the right antenna and tuned up, turn amp on ...

> ubitx to remote-amp1: Turn on amplifier
00:0F.000F AMP POWER ON

> remote-amp1 to ubitx: ACKnowledge POWER ON
0F:00.000F*

> ubitx to ALL: PTT on
00:**.0010 * PTT

> remote-amp1 to ubitx: ACKnowledge PTT
0F:00.0010*

> remote-amp1 to ALL: My ATU status is:
0F:**.0011 ATU STATUS mode=on,pwr=103W,SWR=1.1,L=0.23uh,C=1.3uf

> ubitx to remote-amp1: ACKnowledge ATU status
00:0F.0011*

... User talks for a bit ...

> ubitx to ALL: PTT_END
00:**.0012 PTT_END

> remote-amp1 to ubitx: ACKnowledge PTT_END
0F:00.0012*

> remote-amp1 to ALL: My ATU status is:
0F:**.0013 ATU STATUS mode=on,pwr=0.0W,SWR=1.1,L=0.23uh,C=1.3uf

> ubitx to remote-amp1: ACKnowledge ATU status
00:0F.0013*

... Repeat TXing as needed until done, then eventually put amp and ATU in bypass mode ..
